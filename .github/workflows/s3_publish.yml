# This workflow will build and publish the react frontend on the S3 bucket, thus
# having the latest code.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.
#
# 2. Store an following as Github Actions variables
#    FRONTEND_S3_BUCKET: Name of S3 Bucket that host's your application's web page
#    API_URL: Public Url of you Application's API

name: Deploy Frontend to Amazon ECS
on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-east-1
  FRONTEND_S3_BUCKET: ${{ vars.FRONTEND_S3_BUCKET }}
  API_URL: ${{ vars.API_URL }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Installing Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "19"

      - name: Installing dependencies and syncing to s3
        run: |
          cd ./client
          npm install
          REACT_APP_API_URL=$API_URL npm run build

      - name: Deploy to S3 bucket
        run: aws s3 sync ./client/build s3://$FRONTEND_S3_BUCKET --delete
